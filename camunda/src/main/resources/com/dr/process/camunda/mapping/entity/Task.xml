<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH
    under one or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information regarding copyright
    ownership. Camunda licenses this file to you under the Apache License,
    Version 2.0; you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.camunda.bpm.engine.impl.persistence.entity.TaskEntity">

    <select id="selectTaskByQueryCriteriaCustom" parameterType="org.camunda.bpm.engine.impl.TaskQueryImpl"
            resultMap="taskResultMap">
        <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.bindOrderBy"/>
        ${limitBefore}
        select ${distinct}
        <include refid="columnSelection"/>
        ${limitBetween}
        <if test="taskNameCaseInsensitive">
            , lower(RES.NAME_) LOWER_NAME_
        </if>
        <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.orderBySelection"/>
        <include refid="selectTaskByQueryCriteriaSqlCustom"/>
        ${orderBy}
        ${limitAfter}
    </select>

    <select id="selectTaskCountByQueryCriteriaCustom" parameterType="org.camunda.bpm.engine.impl.TaskQueryImpl"
            resultType="long">
        ${countDistinctBeforeStart} RES.ID_ ${countDistinctBeforeEnd}
        <include refid="selectTaskByQueryCriteriaSqlCustom"/>
        ${countDistinctAfterEnd}
    </select>
    <sql id="selectTaskByQueryCriteriaSqlCustom">

        from ${prefix}ACT_RU_TASK RES
        <bind name="I_JOIN" value="false"/>
        <bind name="D_JOIN" value="false"/>
        <bind name="E_JOIN" value="false"/>
        <bind name="CD_JOIN" value="false"/>
        <bind name="CE_JOIN" value="false"/>
        <bind name="E1_JOIN" value="false"/>
        <bind name="JOIN_TYPE" value="'inner join'"/>

        <foreach collection="queries" item="query">
            <if test="query.isOrQueryActive">
                <bind name="JOIN_TYPE" value="'left join'"/>
            </if>
            <if test="query != null &amp;&amp; (query.candidateUser != null || query.candidateGroups != null || query.involvedUser != null || query.withCandidateGroups || query.withCandidateUsers)">
                <bind name="I_JOIN" value="true"/>
            </if>
            <if test="query != null &amp;&amp; (query.processDefinitionKey != null || query.processDefinitionName != null|| query.processDefinitionKeyLike != null || query.processDefinitionNameLike != null ||
              (query.processDefinitionKeys != null &amp;&amp; query.processDefinitionKeys.length > 0))">
                <bind name="D_JOIN" value="true"/>
            </if>
            <if test="query != null &amp;&amp; (query.processInstanceBusinessKey != null || query.processInstanceBusinessKeyLike != null ||
              (query.processInstanceBusinessKeys != null &amp;&amp; query.processInstanceBusinessKeys.length > 0))">
                <bind name="E_JOIN" value="true"/>
            </if>
            <if test="query != null &amp;&amp; (query.caseDefinitionKey != null || query.caseDefinitionName != null || query.caseDefinitionNameLike != null)">
                <bind name="CD_JOIN" value="true"/>
            </if>
            <if test="query != null &amp;&amp; (query.caseInstanceBusinessKey != null || query.caseInstanceBusinessKeyLike != null)">
                <bind name="CE_JOIN" value="true"/>
            </if>
            <if test="query != null &amp;&amp; (query.activityInstanceIdIn != null &amp;&amp; query.activityInstanceIdIn.length > 0)">
                <bind name="E1_JOIN" value="true"/>
            </if>
        </foreach>

        <if test="I_JOIN">
            ${JOIN_TYPE} ${prefix}ACT_RU_IDENTITYLINK I on I.TASK_ID_ = RES.ID_
        </if>
        <if test="D_JOIN">
            ${JOIN_TYPE} ${prefix}ACT_RE_PROCDEF D on RES.PROC_DEF_ID_ = D.ID_
        </if>
        <if test="E_JOIN">
            ${JOIN_TYPE} ${prefix}ACT_RU_EXECUTION E on RES.PROC_INST_ID_ = E.ID_
        </if>
        <if test="CD_JOIN">
            ${JOIN_TYPE} ${prefix}ACT_RE_CASE_DEF CD on RES.CASE_DEF_ID_ = CD.ID_
        </if>
        <if test="CE_JOIN">
            ${JOIN_TYPE} ${prefix}ACT_RU_CASE_EXECUTION CE on RES.CASE_INST_ID_ = CE.ID_
        </if>
        <if test="E1_JOIN">
            left join ${prefix}ACT_RU_EXECUTION E1 on RES.EXECUTION_ID_ = E1.ID_
        </if>

        <if test="authCheck.shouldPerformAuthorizatioCheck &amp;&amp; authCheck.authUserId != null">
            left join ${prefix}ACT_RE_PROCDEF PROCDEF
            on RES.PROC_DEF_ID_ = PROCDEF.ID_
            <if test="!authCheck.revokeAuthorizationCheckEnabled">
                <include
                        refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.authCheckJoinWithoutOnClause"/>
                AUTH ON (AUTH.RESOURCE_ID_ in (RES.ID_, PROCDEF.KEY_, '*'))
            </if>
        </if>

        <foreach collection="orderingProperties" item="orderingProperty" index="i">
            <if test="orderingProperty.relation != null">
                <bind name="tableAlias"
                      value="@org.camunda.bpm.engine.impl.db.sql.MybatisJoinHelper@tableAlias(orderingProperty.relation, i)"/>
                left join
                ${prefix}${@org.camunda.bpm.engine.impl.db.sql.MybatisJoinHelper@tableMapping(orderingProperty.relation)}
                ${tableAlias}
                on
                <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.filterOrderByRelations"/>
            </if>
        </foreach>
        <where>
            <foreach collection="queries" item="query" index="i">
                <choose>
                    <when test="i == 0">
                        <bind name="queryType" value="'and'"/>
                    </when>
                    <otherwise>
                        <bind name="queryType" value="'or'"/>
                    </otherwise>
                </choose>
                and (
                <trim suffixOverrides="and">
                    1 = 1 and
                    <trim prefixOverrides="or|and">
                        <if test="query.taskId != null">
                            ${queryType} RES.ID_ = #{query.taskId}
                        </if>
                        <if test="query.name != null">
                            <!-- based on CAM-6363 compare name case insensitive -->
                            ${queryType} UPPER(RES.NAME_) = UPPER(#{query.name})
                        </if>
                        <if test="query.nameNotEqual != null">
                            ${queryType} UPPER(RES.NAME_) != UPPER(#{query.nameNotEqual})
                        </if>
                        <if test="query.nameLike != null">
                            <!-- based on CAM-6165 compare name like case insensitive -->
                            ${queryType} UPPER(RES.NAME_) like UPPER(#{query.nameLike}) ESCAPE ${escapeChar}
                        </if>
                        <if test="query.nameNotLike != null">
                            ${queryType} UPPER(RES.NAME_) not like UPPER(#{query.nameNotLike}) ESCAPE ${escapeChar}
                        </if>
                        <if test="query.description != null">
                            ${queryType} RES.DESCRIPTION_ = #{query.description}
                        </if>
                        <if test="query.descriptionLike != null">
                            ${queryType} RES.DESCRIPTION_ like #{query.descriptionLike} ESCAPE ${escapeChar}
                        </if>
                        <if test="query.priority != null">
                            ${queryType} RES.PRIORITY_ = #{query.priority}
                        </if>
                        <if test="query.minPriority != null">
                            ${queryType} RES.PRIORITY_ &gt;= #{query.minPriority}
                        </if>
                        <if test="query.maxPriority != null">
                            ${queryType} RES.PRIORITY_ &lt;= #{query.maxPriority}
                        </if>
                        <if test="query.assignee != null">
                            ${queryType} RES.ASSIGNEE_ = #{query.assignee}
                        </if>
                        <if test="query.assigneeLike != null">
                            ${queryType} RES.ASSIGNEE_ like #{query.assigneeLike} ESCAPE ${escapeChar}
                        </if>
                        <if test="query.assigneeIn != null &amp;&amp; query.assigneeIn.size() &gt; 0">
                            ${queryType} RES.ASSIGNEE_ in
                            <foreach item="assignee" index="index" collection="query.assigneeIn"
                                     open="(" separator="," close=")">
                                #{assignee}
                            </foreach>
                        </if>
                        <if test="query.owner != null">
                            ${queryType} RES.OWNER_ = #{query.owner}
                        </if>
                        <if test="query.unassigned">
                            ${queryType} RES.ASSIGNEE_ IS NULL
                        </if>
                        <if test="query.assigned">
                            ${queryType} RES.ASSIGNEE_ IS NOT NULL
                        </if>
                        <if test="query.noDelegationState">
                            ${queryType} RES.DELEGATION_ IS NULL
                        </if>
                        <if test="query.delegationState != null">
                            ${queryType} RES.DELEGATION_ = #{query.delegationStateString}
                        </if>
                        <if test="query.processInstanceId != null">
                            ${queryType} RES.PROC_INST_ID_ = #{query.processInstanceId}
                        </if>
                        <if test="query.processInstanceBusinessKey != null">
                            ${queryType} E.BUSINESS_KEY_ = #{query.processInstanceBusinessKey}
                        </if>
                        <if test="query.processInstanceBusinessKeys != null &amp;&amp; query.processInstanceBusinessKeys.length > 0">
                            ${queryType} E.BUSINESS_KEY_ in
                            <foreach item="item" index="index" collection="query.processInstanceBusinessKeys"
                                     open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="query.processInstanceBusinessKeyLike != null">
                            ${queryType} E.BUSINESS_KEY_ like #{query.processInstanceBusinessKeyLike} ESCAPE
                            ${escapeChar}
                        </if>
                        <if test="query.executionId != null">
                            ${queryType} RES.EXECUTION_ID_ = #{query.executionId}
                        </if>
                        <if test="query.caseInstanceId != null">
                            ${queryType} RES.CASE_INST_ID_ = #{query.caseInstanceId}
                        </if>
                        <if test="query.caseInstanceBusinessKey != null">
                            ${queryType} CE.BUSINESS_KEY_ = #{query.caseInstanceBusinessKey}
                        </if>
                        <if test="query.caseInstanceBusinessKeyLike != null">
                            ${queryType} CE.BUSINESS_KEY_ like #{query.caseInstanceBusinessKeyLike} ESCAPE ${escapeChar}
                        </if>
                        <if test="query.caseExecutionId != null">
                            ${queryType} RES.CASE_EXECUTION_ID_ = #{query.caseExecutionId}
                        </if>
                        <if test="query.createTime != null">
                            ${queryType} RES.CREATE_TIME_ = #{query.createTime}
                        </if>
                        <if test="query.createTimeBefore != null">
                            ${queryType} RES.CREATE_TIME_ &lt; #{query.createTimeBefore}
                        </if>
                        <if test="query.createTimeAfter != null">
                            ${queryType} RES.CREATE_TIME_ &gt; #{query.createTimeAfter}
                        </if>
                        <if test="query.key != null">
                            ${queryType} RES.TASK_DEF_KEY_ = #{query.key}
                        </if>
                        <if test="query.keyLike != null">
                            ${queryType} RES.TASK_DEF_KEY_ like #{query.keyLike} ESCAPE ${escapeChar}
                        </if>
                        <if test="query.parentTaskId != null">
                            ${queryType} RES.PARENT_TASK_ID_ = #{query.parentTaskId}
                        </if>
                        <if test="query.taskDefinitionKeyNotLike != null">
                            ${queryType} RES.TASK_DEF_KEY_ not like #{query.taskDefinitionKeyNotLike}
                        </if>
                        <if test="query.taskDefinitionKeys != null &amp;&amp; query.taskDefinitionKeys.length > 0">
                            ${queryType} RES.TASK_DEF_KEY_ in
                            <foreach item="item" index="index" collection="query.taskDefinitionKeys"
                                     open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="query.processDefinitionId != null">
                            ${queryType} RES.PROC_DEF_ID_ = #{query.processDefinitionId}
                        </if>
                        <if test="query.processDefinitionKey != null">
                            ${queryType} D.KEY_ = #{query.processDefinitionKey}
                        </if>
                        <if test="query.processDefinitionKeyLike != null">
                            ${queryType} D.KEY_ like #{query.processDefinitionKeyLike}
                        </if>
                        <if test="query.processDefinitionKeys != null &amp;&amp; query.processDefinitionKeys.length > 0">
                            ${queryType} D.KEY_ in
                            <foreach item="item" index="index" collection="query.processDefinitionKeys"
                                     open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="query.processDefinitionName != null">
                            ${queryType} D.NAME_ = #{query.processDefinitionName}
                        </if>
                        <if test="query.processDefinitionNameLike != null">
                            ${queryType} D.NAME_ like #{query.processDefinitionNameLike} ESCAPE ${escapeChar}
                        </if>
                        <if test="query.caseDefinitionId != null">
                            ${queryType} RES.CASE_DEF_ID_ = #{query.caseDefinitionId}
                        </if>
                        <if test="query.caseDefinitionKey != null">
                            ${queryType} CD.KEY_ = #{query.caseDefinitionKey}
                        </if>
                        <if test="query.caseDefinitionName != null">
                            ${queryType} CD.NAME_ = #{query.caseDefinitionName}
                        </if>
                        <if test="query.caseDefinitionNameLike != null">
                            ${queryType} CD.NAME_ like #{query.caseDefinitionNameLike} ESCAPE ${escapeChar}
                        </if>
                        <if test="query.dueDate != null || query.dueBefore != null || query.dueAfter != null">
                            ${queryType}
                            <trim prefix="(" suffix=")" prefixOverrides="and|or">
                                <if test="query.dueDate != null">
                                    ${queryType} RES.DUE_DATE_ = #{query.dueDate}
                                </if>
                                <if test="query.dueBefore != null">
                                    ${queryType} RES.DUE_DATE_ &lt; #{query.dueBefore}
                                </if>
                                <if test="query.dueAfter != null">
                                    ${queryType} RES.DUE_DATE_ &gt; #{query.dueAfter}
                                </if>

                                and RES.DUE_DATE_ is not null
                            </trim>
                        </if>
                        <if test="query.followUpDate != null || query.followUpBefore != null || query.followUpAfter != null">
                            ${queryType}
                            <trim prefix="(" suffix=")" prefixOverrides="and|or">
                                <if test="query.followUpDate != null">
                                    ${queryType} RES.FOLLOW_UP_DATE_ = #{query.followUpDate}
                                </if>
                                <if test="query.followUpBefore != null &amp;&amp; !query.followUpNullAccepted">
                                    ${queryType} RES.FOLLOW_UP_DATE_ &lt; #{query.followUpBefore}
                                </if>
                                <if test="query.followUpBefore != null &amp;&amp; query.followUpNullAccepted">
                                    ${queryType} (RES.FOLLOW_UP_DATE_ IS NULL OR RES.FOLLOW_UP_DATE_ &lt;
                                    #{query.followUpBefore})
                                </if>
                                <if test="query.followUpAfter != null">
                                    ${queryType} RES.FOLLOW_UP_DATE_ &gt; #{query.followUpAfter}
                                </if>

                                <if test="!query.followUpNullAccepted">
                                    and RES.FOLLOW_UP_DATE_ is not null
                                </if>
                            </trim>
                        </if>
                        <if test="query.excludeSubtasks">
                            ${queryType} RES.PARENT_TASK_ID_ IS NULL
                        </if>
                        <if test="query.activityInstanceIdIn != null &amp;&amp; query.activityInstanceIdIn.length > 0">
                            ${queryType} E1.ACT_INST_ID_ in
                            <foreach item="item" index="index" collection="query.activityInstanceIdIn"
                                     open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="query.isTenantIdSet">
                            <if test="query.tenantIds != null &amp;&amp; query.tenantIds.length > 0">
                                ${queryType} RES.TENANT_ID_ in
                                <foreach item="tenantId" index="index" collection="query.tenantIds"
                                         open="(" separator="," close=")">
                                    #{tenantId}
                                </foreach>
                            </if>
                            <if test="query.tenantIds == null">
                                ${queryType} RES.TENANT_ID_ is null
                            </if>
                        </if>
                        <if test="query.candidateUser != null || query.candidateGroups != null || query.withCandidateGroups || query.withCandidateUsers">
                            ${queryType}
                            <trim prefixOverrides="and" prefix="(" suffix=")">
                                <if test="!query.includeAssignedTasks">
                                    and RES.ASSIGNEE_ is null
                                </if>
                                and I.TYPE_ = 'candidate'
                                <if test="query.candidateUser != null || query.candidateGroups != null">
                                    and
                                    (
                                    <if test="query.candidateUser != null">
                                        I.USER_ID_ = #{query.candidateUser}
                                    </if>
                                    <if test="query.candidateUser != null &amp;&amp; query.candidateGroups != null &amp;&amp; query.candidateGroups.size() &gt; 0">
                                        or
                                    </if>
                                    <if test="query.candidateGroups != null &amp;&amp; query.candidateGroups.size() &gt; 0">
                                        I.GROUP_ID_ IN
                                        <foreach item="group" index="index" collection="query.candidateGroups"
                                                 open="(" separator="," close=")">
                                            #{group}
                                        </foreach>
                                    </if>
                                    )
                                </if>

                                <if test="query.withCandidateGroups">
                                    and I.GROUP_ID_ is not null
                                </if>

                                <if test="query.withCandidateUsers">
                                    and I.USER_ID_ is not null
                                </if>
                            </trim>
                        </if>

                        <if test="query.withoutCandidateGroups || query.withoutCandidateUsers">
                            ${queryType}
                            <trim prefixOverrides="and" prefix="(" suffix=")">
                                <if test="!query.includeAssignedTasks">
                                    and RES.ASSIGNEE_ is null
                                </if>
                                and RES.ID_ not in (
                                select
                                TASK_ID_
                                from
                                ${prefix}ACT_RU_IDENTITYLINK ARIEL
                                <where>
                                    ARIEL.TYPE_ = 'candidate'
                                    <if test="query.withoutCandidateGroups">
                                        and ARIEL.GROUP_ID_ is not null
                                    </if>
                                    <if test="query.withoutCandidateUsers">
                                        and ARIEL.USER_ID_ is not null
                                    </if>
                                </where>
                                )
                            </trim>
                        </if>

                        <if test="query.involvedUser != null">
                            ${queryType} I.USER_ID_ = #{query.involvedUser}
                        </if>


                        <!-- queryVariables -->
                        <!-- PLEASE NOTE: If you change anything have a look into the HistoricVariableInstance & HistoricProcessInstance, the same query object is used there! -->
                        <foreach collection="query.variables" index="index" item="queryVariableValue">
                            ${queryType} EXISTS (
                            select
                            ID_
                            from
                            ${prefix}ACT_RU_VARIABLE
                            WHERE
                            <bind name="varPrefix" value="''"/>

                            <include
                                    refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.variableNameEqualsCaseInsensitive"/>

                            <choose>
                                <when test="queryVariableValue.local">
                                    and RES.ID_ = TASK_ID_
                                </when>
                                <otherwise>
                                    <!-- When process instance or case instance variable is queried for, taskId should be null -->
                                    and TASK_ID_ is null

                                    <choose>
                                        <when test="queryVariableValue.processInstanceVariable">
                                            and RES.PROC_INST_ID_ = PROC_INST_ID_
                                        </when>
                                        <otherwise>
                                            and RES.CASE_INST_ID_ = CASE_INST_ID_
                                        </otherwise>
                                    </choose>

                                </otherwise>
                            </choose>
                            <bind name="varTypeField" value="'TYPE_'"/>
                            <if test="queryVariableValue.valueConditions != null">
                                and
                                <include
                                        refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.variableValueConditions"/>
                            </if>
                            )
                        </foreach>
                        <if test="query.suspensionState != null">
                            <if test="query.suspensionState.stateCode == 1">
                                ${queryType} RES.SUSPENSION_STATE_ = 1
                            </if>
                            <if test="query.suspensionState.stateCode == 2">
                                ${queryType} RES.SUSPENSION_STATE_ = 2
                            </if>
                        </if>
                    </trim>
                </trim>
                )
            </foreach>

            <include
                    refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.contextualAuthorizationCheck"/>
            <include refid="org.camunda.bpm.engine.impl.persistence.entity.TenantEntity.queryTenantCheck"/>

        </where>
    </sql>
</mapper>
