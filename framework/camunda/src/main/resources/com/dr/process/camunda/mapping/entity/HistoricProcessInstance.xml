<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.camunda.bpm.engine.impl.persistence.entity.HistoricProcessInstanceEntity">

    <select id="selectHistoricProcessInstancesByQueryCriteriaCustom"
            parameterType="org.camunda.bpm.engine.impl.HistoricProcessInstanceQueryImpl"
            resultMap="historicProcessInstanceResultMap">
        <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.bindOrderBy"/>
        ${limitBefore}
        select ${distinct} RES.*
        ${limitBetween}
        <include refid="selectHistoricProcessInstancesByQueryCriteriaSqlCustom"/>
        ${orderBy}
        ${limitAfter}
    </select>
    <select id="selectHistoricProcessInstanceCountByQueryCriteriaCustom"
            parameterType="org.camunda.bpm.engine.impl.HistoricProcessInstanceQueryImpl" resultType="long">
        ${countDistinctBeforeStart} RES.ID_ ${countDistinctBeforeEnd}
        <include refid="selectHistoricProcessInstancesByQueryCriteriaSqlCustom"/>
        ${countDistinctAfterEnd}
    </select>

    <sql id="selectHistoricProcessInstancesByQueryCriteriaSqlCustom">

        from (

        SELECT SELF.*, DEF.NAME_, DEF.VERSION_
        FROM ${prefix}ACT_HI_PROCINST SELF

        LEFT JOIN ${prefix}ACT_RE_PROCDEF DEF
        ON SELF.PROC_DEF_ID_ = DEF.ID_


        <if test="authCheck.shouldPerformAuthorizatioCheck &amp;&amp; !authCheck.revokeAuthorizationCheckEnabled &amp;&amp; authCheck.authUserId != null">
            <include
                    refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.authCheckJoinWithoutOnClause"/>
            AUTH ON (AUTH.RESOURCE_ID_ in (SELF.PROC_DEF_KEY_, '*'))
        </if>

        <bind name="INC_JOIN" value="false"/>
        <bind name="HAI_JOIN" value="false"/>
        <bind name="JOIN_TYPE" value="'inner join'"/>

        <foreach collection="queries" item="query">
            <if test="query.isOrQueryActive">
                <bind name="JOIN_TYPE" value="'left join'"/>
            </if>

            <if test="query != null &amp;&amp; (query.withIncidents || query.withRootIncidents || query.incidentStatus != null || query.incidentMessage != null || query.incidentMessageLike != null || query.incidentType != null)">
                <bind name="INC_JOIN" value="true"/>
            </if>

            <if test="query != null &amp;&amp; (query.executedActivityIds != null and query.executedActivityIds.length > 0) || (query.activeActivityIds != null and query.activeActivityIds.length > 0)">
                <bind name="HAI_JOIN" value="true"/>
            </if>
        </foreach>

        <if test="INC_JOIN">
            ${JOIN_TYPE} ${prefix}ACT_HI_INCIDENT INC on SELF.PROC_INST_ID_ = INC.PROC_INST_ID_
        </if>
        <if test="HAI_JOIN">
            LEFT JOIN ${prefix}ACT_HI_ACTINST HAI
            ON HAI.PROC_INST_ID_ = SELF.ID_
        </if>

        <where>
            <foreach collection="queries" item="query" index="i">
                <choose>
                    <when test="i == 0">
                        <bind name="queryType" value="'and'"/>
                    </when>
                    <otherwise>
                        <bind name="queryType" value="'or'"/>
                    </otherwise>
                </choose>
                and (
                <trim suffixOverrides="and">
                    1 = 1 and
                    <trim prefixOverrides="or|and">
                        <if test="query.processInstanceId != null">
                            ${queryType} SELF.PROC_INST_ID_ = #{query.processInstanceId}
                        </if>
                        <if test="query.processInstanceIds != null &amp;&amp; !query.processInstanceIds.isEmpty()">
                            ${queryType} SELF.PROC_INST_ID_ in
                            <foreach item="item" index="index" collection="query.processInstanceIds" open="("
                                     separator="," close=")">
                                #{item, jdbcType=VARCHAR}
                            </foreach>
                        </if>
                        <if test="query.caseInstanceId != null">
                            ${queryType} SELF.CASE_INST_ID_ = #{query.caseInstanceId}
                        </if>
                        <if test="query.processDefinitionId != null">
                            ${queryType} SELF.PROC_DEF_ID_ = #{query.processDefinitionId}
                        </if>
                        <if test="query.processDefKeyLike != null">
                            ${queryType} SELF.PROC_DEF_KEY_ like #{query.processDefKeyLike}
                        </if>
                        <if test="query.processDefinitionKey != null">
                            ${queryType} DEF.KEY_ = #{query.processDefinitionKey}
                        </if>
                        <if test="query.processDefinitionKeys != null &amp;&amp; query.processDefinitionKeys.length > 0">
                            and DEF.KEY_ in
                            <foreach item="item" index="index" collection="query.processDefinitionKeys"
                                     open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="query.processDefinitionName != null">
                            ${queryType} DEF.NAME_ = #{query.processDefinitionName}
                        </if>
                        <if test="query.processDefinitionNameLike != null">
                            ${queryType} DEF.NAME_ like #{query.processDefinitionNameLike} ESCAPE ${escapeChar}
                        </if>
                        <if test="query.businessKey != null">
                            ${queryType} SELF.BUSINESS_KEY_ = #{query.businessKey}
                        </if>
                        <if test="query.businessKeyLike != null">
                            ${queryType} SELF.BUSINESS_KEY_ like #{query.businessKeyLike} ESCAPE ${escapeChar}
                        </if>

                        <if test="query.startedBefore != null">
                            ${queryType} SELF.START_TIME_ &lt;= #{query.startedBefore}
                        </if>
                        <if test="query.startedAfter != null">
                            ${queryType} SELF.START_TIME_ &gt;= #{query.startedAfter}
                        </if>
                        <if test="query.finishedBefore != null">
                            ${queryType} SELF.END_TIME_ &lt;= #{query.finishedBefore}
                        </if>
                        <if test="query.finishedAfter != null">
                            ${queryType} SELF.END_TIME_ &gt;= #{query.finishedAfter}
                        </if>
                        <if test="query.processKeyNotIn != null">
                            ${queryType} (
                            <foreach collection="query.processKeyNotIn" index="index" item="procDefKey"
                                     open="(" separator=" and " close=")">
                                DEF.KEY_ not like #{procDefKey} ESCAPE ${escapeChar}
                            </foreach>
                            )
                        </if>
                        <if test="query.state != null">
                            ${queryType} STATE_ = #{query.state}
                        </if>


                        <!-- DEPRECATED : TO BE REMOVED IN 5.11 -->
                        <if test="query.startDateOn">
                            ${queryType} (SELF.START_TIME_ &gt;= #{query.startDateOnBegin}
                            and SELF.START_TIME_ &lt;= #{query.startDateOnEnd})
                        </if>
                        <!-- DEPRECATED : TO BE REMOVED IN 5.11 -->
                        <if test="query.finishDateOn">
                            ${queryType} (SELF.END_TIME_ &gt;= #{query.finishDateOnBegin}
                            and SELF.END_TIME_ &lt;= #{query.finishDateOnEnd})
                        </if>
                        <!-- DEPRECATED : TO BE REMOVED IN 5.11 -->
                        <if test="query.finishDateBy">
                            ${queryType} SELF.END_TIME_ &lt;= #{query.finishDateBy}
                        </if>
                        <!-- DEPRECATED : TO BE REMOVED IN 5.11 -->
                        <if test="query.startDateBy">
                            ${queryType} SELF.START_TIME_ &gt;= #{query.startDateBy}
                        </if>

                        <if test="query.unfinished">
                            ${queryType} SELF.END_TIME_ IS NULL
                        </if>
                        <if test="query.finished">
                            ${queryType} SELF.END_TIME_ is not NULL
                        </if>

                        <if test="query.incidentType != null">
                            ${queryType} INC.INCIDENT_TYPE_ = #{query.incidentType}
                        </if>
                        <if test="query.incidentMessage != null">
                            ${queryType} INC.INCIDENT_MSG_ = #{query.incidentMessage}
                        </if>

                        <if test="query.incidentMessageLike != null">
                            ${queryType} INC.INCIDENT_MSG_ like #{query.incidentMessageLike} ESCAPE ${escapeChar}
                        </if>

                        <if test="query.incidentStatus == 'open'">
                            ${queryType} INC.END_TIME_ is null
                        </if>

                        <if test="query.incidentStatus == 'resolved'">
                            ${queryType} INC.END_TIME_ is not null
                        </if>

                        <if test="query.withRootIncidents">
                            ${queryType} INC.ID_ = INC.ROOT_CAUSE_INCIDENT_ID_
                        </if>
                        <if test="query.startedBy != null">
                            ${queryType} SELF.START_USER_ID_ = #{query.startedBy}
                        </if>

                        <if test="query.isRootProcessInstances">
                            ${queryType} SELF.SUPER_PROCESS_INSTANCE_ID_ is null
                        </if>
                        <if test="query.superProcessInstanceId != null">
                            ${queryType} SELF.SUPER_PROCESS_INSTANCE_ID_ = #{query.superProcessInstanceId}
                        </if>
                        <if test="query.subProcessInstanceId != null">
                            ${queryType} SELF.PROC_INST_ID_ = (select SUPER_PROCESS_INSTANCE_ID_ from
                            ${prefix}ACT_HI_PROCINST where
                            PROC_INST_ID_ = #{query.subProcessInstanceId})
                        </if>
                        <if test="query.superCaseInstanceId != null">
                            ${queryType} SELF.SUPER_CASE_INSTANCE_ID_ = #{query.superCaseInstanceId}
                        </if>
                        <if test="query.subCaseInstanceId != null">
                            ${queryType} SELF.PROC_INST_ID_ = (select SUPER_PROCESS_INSTANCE_ID_ from
                            ${prefix}ACT_HI_CASEINST where
                            CASE_INST_ID_ = #{query.subCaseInstanceId})
                        </if>
                        <foreach collection="query.queryVariableValues" index="index" item="queryVariableValue">
                            ${queryType} EXISTS (
                            select
                            ID_
                            from
                            ${prefix}ACT_HI_VARINST
                            WHERE
                            <bind name="varPrefix" value="''"/>

                            <include
                                    refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.variableNameEqualsCaseInsensitive"/>

                            AND PROC_INST_ID_ = SELF.PROC_INST_ID_

                            <bind name="varTypeField" value="'VAR_TYPE_'"/>
                            <if test="queryVariableValue.valueConditions != null">
                                and
                                <include
                                        refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.variableValueConditions"/>
                            </if>
                            )
                        </foreach>

                        <if test="query.executedActivityAfter != null || query.executedActivityBefore != null">
                            ${queryType} EXISTS (
                            SELECT *
                            FROM ${prefix}ACT_HI_ACTINST
                            <where>
                                PROC_INST_ID_ = SELF.ID_
                                <if test="query.executedActivityAfter != null">
                                    AND (START_TIME_ &gt;= #{query.executedActivityAfter} OR END_TIME_ &gt;=
                                    #{query.executedActivityAfter})
                                </if>
                                <if test="query.executedActivityBefore != null">
                                    AND (START_TIME_ &lt;= #{query.executedActivityBefore} OR END_TIME_ &lt;=
                                    #{query.executedActivityBefore})
                                </if>
                            </where>
                            )
                        </if>

                        <if test="query.executedActivityIds != null and query.executedActivityIds.length > 0">
                            ${queryType} (
                            HAI.END_TIME_ IS NOT NULL
                            AND HAI.ACT_ID_ IN
                            <foreach item="activityId" index="index" collection="query.executedActivityIds" open="("
                                     separator="," close=")">
                                #{activityId}
                            </foreach>
                            )
                        </if>

                        <if test="query.activeActivityIds != null and query.activeActivityIds.length > 0">
                            ${queryType} (
                            HAI.END_TIME_ IS NULL
                            AND HAI.ACT_ID_ IN
                            <foreach item="activityId" index="index" collection="query.activeActivityIds" open="("
                                     separator="," close=")">
                                #{activityId}
                            </foreach>
                            )
                        </if>

                        <if test="query.executedJobAfter != null || query.executedJobBefore != null">
                            ${queryType} EXISTS (
                            SELECT *
                            FROM ${prefix}ACT_HI_JOB_LOG
                            <where>
                                PROCESS_INSTANCE_ID_ = SELF.ID_
                                <if test="query.executedJobAfter != null">
                                    AND TIMESTAMP_ &gt;= #{query.executedJobAfter}
                                </if>
                                <if test="query.executedJobBefore != null">
                                    AND TIMESTAMP_ &lt;= #{query.executedJobBefore}
                                </if>
                            </where>
                            )
                        </if>

                        <if test="query.isTenantIdSet">
                            <if test="query.tenantIds != null &amp;&amp; query.tenantIds.length > 0">
                                ${queryType} SELF.TENANT_ID_ in
                                <foreach item="tenantId" index="index" collection="query.tenantIds"
                                         open="(" separator="," close=")">
                                    #{tenantId}
                                </foreach>
                            </if>
                            <if test="query.tenantIds == null">
                                ${queryType} SELF.TENANT_ID_ is null
                            </if>
                        </if>
                    </trim>
                </trim>
                )
            </foreach>

            <if test="authCheck.shouldPerformAuthorizatioCheck &amp;&amp; authCheck.authUserId != null">
                and (
                (SELF.PROC_DEF_KEY_ is not null
                <include
                        refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.queryAuthorizationCheck"/>
                ) or SELF.PROC_DEF_KEY_ is null
                )
            </if>

            <include
                    refid="org.camunda.bpm.engine.impl.persistence.entity.TenantEntity.queryTenantCheckWithSelfPrefix"/>
        </where>

        ) RES
    </sql>
</mapper>
